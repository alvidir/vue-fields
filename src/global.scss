@use "sass:math";
@import "fibonacci-styles";

$transition-lapse: $fib-7 * 0.01s ease-in-out !default;
$default-height: $fib-8 * 1px !default;
$active-height: $fib-9 * 1px !default;
$small-font-size: $fib-6 * 1px !default;
$default-color: find-fib-color(success);
$error-color: find-fib-color(error);
$unactive-color: darken(find-fib-color(disabled), $fib-6 * 1%);
$margin-bounds: $fib-6 * 1px;

.active, .large {
    min-height: $active-height !important;

    button {
        height: $active-height !important;
    }
}

.border-line {
    @extend .round-corners, .fib-5;
    border: $fib-1 * 1px solid;

    &:not(:focus-within) {
        border-color: $unactive-color;
    }

    &:focus-within {
        border: $fib-2 * 1px solid;
        border-color: $default-color;
    }

    &.error {
        border-color: $error-color !important;
    }
}

input.transparent {
    height: 100%;
    background: transparent;
    outline: none;
    border: none;
    font-size: 1em;
    z-index: 1;
}

.input-container {
    @extend .border-line;

    display: flex;
    max-width: 100%;
    min-height: $default-height;
    transition: min-height $transition-lapse,
                background $transition-lapse,
                border-color $transition-lapse;

    label {
        opacity: $fib-9 * 1%;
        transition: font-size $transition-lapse,
                    line-height $transition-lapse;
    }

    input {
        @extend .transparent;
    }
}

.error-container {
    padding-bottom: $margin-bounds;
    color: $error-color;
    transition: opacity $transition-lapse,
                transform $transition-lapse;
    
    span {
      font-size: $small-font-size;
      font-weight: 600;
    }
}